<?xml version="1.0" encoding="utf-8"?>
<?xml-model href="rfc7991bis.rnc"?>  <!-- Required for schema validation and schema-aware editing -->
<!-- <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?> -->
<!-- This third-party XSLT can be enabled for direct transformations in XML processors, including most browsers -->


<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>
<!-- If further character entities are required then they should be added to the DOCTYPE above.
     Use of an external entity file is not recommended. -->

<rfc
  xmlns:xi="http://www.w3.org/2001/XInclude"
  category="info"
  docName="draft-link-v6ops-6mops.xml"
  ipr="trust200902"
  obsoletes=""
  updates="8585"
  submissionType="IETF"
  xml:lang="en"
  version="3">
  <front>
<title abbrev="6mops">IPv6-Mostly Networks: Deployment and Operations Considerations</title>
    <seriesInfo name="Internet-Draft" value="draft-link-v6ops-6mops"/>
    <author fullname="Jen Linkova" initials="J" surname="Linkova">
      <organization>Google</organization>
      <address>
        <postal>
          <!-- Reorder these if your country does things differently -->
          <street>1 Darling Island Rd</street>
          <city>Pyrmont</city>
          <region>NSW</region>
          <code>2009</code>
          <country>AU</country>
        </postal>        
        <email>furry13@gmail.com</email>  
        <email>furry@google.com</email>  
      </address>
    </author>
    <date year="2024"/>
<area>Ops</area>
    <workgroup>IPv6 operations</workgroup>
    <keyword>ipv6</keyword>
    <keyword>slaac</keyword>
    <keyword>464xlat</keyword>
    <keyword>clat</keyword>
    <keyword>nat64</keyword>
    <keyword>pref64</keyword>
    <keyword>ipv6-only</keyword>
    <keyword>ipv6-mostly</keyword>


    <abstract>
 <t>
This document discusses an deployment scenario called "an IPv6-Mostly network", when IPv6-only and IPv4-enabled endpoints coexist on the same network (network segment, VLAN, SSID etc).
</t>

    </abstract>
 
  </front>

  <middle>
    
    <section>
      <name>Introduction</name>
<t>
While most network operators initially deploy IPv6 alongside their existing IPv4 infrastructure, pure IPv6-only networks remain uncommon outside of the mobile carrier space. This dual-stack approach is seen as a necessary transition phase, allowing operators to gain experience with IPv6 while minimizing disruption.
</t>

<t>
However, dual-stack networks don't address the core problem driving IPv6 adoption: IPv4 address exhaustion. They still require the same amount of IPv4 resources as IPv4-only networks.  Even worse, this dual-stack approach often becomes a long-term crutch. Many applications still rely on IPv4, creating a chicken-and-egg problem: IPv6-only networks seem impractical with so many incompatible applications, yet applications continue to rely on IPv4 because IPv6-only networks are rare.
</t>

<t>
The less control a network operator has over devices and applications, the more difficult it is to break IPv4 dependencies and move to IPv6-only. This is particularly challenging in enterprise networks with legacy IPv4-dependent applications and public WiFi networks where operators cannot guarantee device compatibility.
</t>

<t>
To enable a gradual migration, operators need to identify which devices can function in IPv6-only mode and which cannot. Creating separate network segments for each type introduces complexity and scalability issues â€“ a major hurdle to IPv6-only adoption.
</t>

<t>
A more desirable approach is to deploy so-called "IPv6-mostly" network that provides IPv4 on demand. This allows IPv6-capable devices to remain IPv6-only while seamlessly supplying IPv4 to those that require it.
</t>

<t>
This document explores the requirements, recommendations, and challenges associated with deploying IPv6-mostly networks in enterprise and public WiFi environments. While the principles discussed may be applicable to other network types, this document's focus remains on these specific use cases.
</t>
    </section>
      
      <section>
        <name>Requirements Language</name>
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
          "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT
          RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be
          interpreted as described in BCP 14 <xref target="RFC2119"/>
          <xref target="RFC8174"/> when, and only when, they appear in
          all capitals, as shown here.</t>
      </section>

<section anchor="term">
<name>
Terminology
</name>
<t>
This document reuses most of Terminology section from <xref target="RFC8925"/>.
</t>
<t>
Endpoint: A device connected to a network and considered a host From the operator's perspective. However, some endpoint can also extend the network to other physical or logical systems, thereby assuming routing functions. Examples include:
</t>

<ul>
<li>
<t>
Corporate laptop: While primarily a host, it might run virtual systems and route traffic to them, extending the network and acting as a router.
</t>
</li>
<li>
<t>
Mobile phone with tethering enabled: Acts as a host on the WiFi network, but also as a router for tethered devices, potentially without the operator's knowledge or consent.
</t>
</li>
</ul>
<t>
Network segment: a link (VLAN, a broadcast domain etc) where hosts share the same IP subnet.
</t>

</section>

<section anchor="overview">
<name>Solution Overview</name>
<t>
In a nutshell, an IPv6-mostly network is very much similar to a dual-stack one with two additional key elements:
</t>
<ul>
<li>
<t>
The network provides NAT64 (<xref target="RFC6146"/>)  functionality ([RFC6146]), enabling IPv6-only clients to communicate with IPv4-only destinations.
</t>
</li>
<li>
<t>
The DHCPv4 infrastructure processing DHCPv4 Option 108 as per <xref target="RFC8925"/>.
</t>
</li>
</ul>
<t>
Upon connecting to an IPv6-mostly network segment, an endpoint configures its IP stack based on its capabilities:
</t>
<ul>
<li>
<t>
IPv4-Only Endpoint: Acquires an IPv4 address through DHCPv4.
</t>
</li>
<li>
<t>
Dual-Stack Endpoint (Not IPv6-Only Capable): Configures IPv6 addresses via Stateless Address Autoconfiguration (SLAAC) and, optionally, DHCPv6. Additionally, it obtains an IPv4 address via DHCPv4.
</t>
</li>
<li>
<t>
IPv6-only capable endpoint configures its IPv6 addresses and, while performing DHCPv4, includes option 108 (<xref target="RFC8925"/>) into the Parameter Request List. The DHCP server returns the option and, as per <xref target="RFC8925"/>, the endpoint forgoes requesting an IPv4 address, remaining in IPv6-only mode.
</t>
</li>
</ul>

<t>
An IPv6-mostly network segment can support a mix of IPv4-only, dual-stack, and IPv6-only devices.  IPv6-only endpoints utilize the network-provided NAT64 to reach IPv4-only destinations. 
</t>
<t>
The following sections discussed the various solution elements in more details.
</t>

<section anchor="capable">
<name>IPv6-Only Capable Endpoints</name>
<t>
The term "IPv6-only capable endpoint" lacks a strict technical definition. It broadly describes a device that can function without native IPv4 connectivity/IPv4 addresses, providing the same user experience. The most common way to achieve this is by implementing a customer-side translator (CLAT) as specified in 464XLAT (<xref target="RFC6877"/>). Devices which support CLAT (such as mobile phones) are known to operate without issues in IPv6-only mode.
In some cases, however, a network administrator may consider a device IPv6-only capable even without CLAT implementation. 
For example, if all applications run on the device have been tested and confirmed to operate in NAT64 envinronment without any IPv4 dependencies.
</t>
</section>

<section>
<name>IPv6-Only and IPv4-enabled Endpoints Coexistence</name>
<t>
One effective way to restrict IPv4 addresses solely to devices that require them is to enable support for the IPv6-Only Preferred DHCPv4 option (Option 108, <xref target="RFC8925"/>) on the network's DHCP infrastructure. 
Most CLAT-enabled systems also support Option 108.  By recognizing this option, the network can configure those devices as IPv6-only, allowing them to use CLAT fo
providing IPv4 address to the local endpoint's network stack. 
</t>
<t>
Certain devices, such as resource-constrained embedded systems, may operate in IPv6-only mode without CLAT if their communication is limited to IPv6-enabled destinations. Since these systems often lack Option 108 support, administrators may need alternative methods to prevent IPv4 address assignment.

One approach is to block IPv4 traffic at the switchport level. This could involve:
</t>

<ul>
<li>
<t>
Static ACL: Applying a static filter with a "deny ip any any" rule.
</t>
</li>
<li>
<t>
Dynamic ACL via RADIUS: If 802.1x authentication is in use, RADIUS can provide an ACL blocking all IPv4 traffic.
</t>
</li>
</ul>

<t>
The ACL-based approach has some scalability implications and increases operational complexity, therefore it could only be recommended as a stopgap solution. 
</t>


</section>

<section>

<name>Access to IPv4-only Destinations</name>
<t>
</t>

<section>

<name>NAT64</name>
<t>
IPv6-only endpoints require NAT64 to access IPv4-only destinations. Quite often operators choose to combine NAT44 and NAT64 functions.
However, if not all internal services are IPv6-enabled, then NAT64 might need to be performed closer to the clients. If IPv4-only internal destinations are using <xref target="RFC1918"/> address space, then the operator MUST NOT use the well-known prefix 64:ff9b::/96 for NAT64 (see section 3.1 of <xref target="RFC6052"/>).
</t>

</section>

<section anchor="v4only">
<name>464XLAT</name>
<t>
Enabling CLAT (Customer-side translator) on endpoints is essential for seamless operation of IPv4-only applications in IPv6-only environments. CLAT provides an <xref target="RFC1918"/> address and IPv4 default route, ensuring functionality even without a native IPv4 address from the network. Without CLAT, IPv4-only applications would fail, negatively impacting user experience and increasing support overhead.
</t>
<t>
Recommendations for Network Administrators controlling the endpoints:
</t>
<ul>
<li>
<t>
CLAT + DHCPv4 Option 108: If the network administrator can control endpoint configuration, CLAT SHOULD be enabled on endpoints sending DHCPv4 Option 108. This streamlines the transition.
</t>
</li>
<li>
<t>
Option 108 Without CLAT MAY be enabled if the administrator is willing to identify and fixIPv4-only systems/applications, or if all applications are confirmed to work in IPv6-only mode.
</t>
</li>
</ul>
<t>
One of the benefits of CLAT is does not require DNS64.
 If CLAT is not enabled, the network MUST provide DNS64 functions unless endpoints are guaranteed to never access IPv4-only destinations. An example of this exception is a specialized network segment with limited, IPv6-capable destinations (see <xref target="dns64"/> for more details).
</t>
</section>

<section anchor="pref64">
<name>Signalling NAT64 Prefix to Hosts</name>
<t>
Hosts running 464XLAT need to discover the PREF64 (the IPv6 prefix used by NAT64).
The network administrator SHOULD configure the first-hop routers to include PREF64 information in Router Advertisements as per (<xref target="RFC8781"/>) even if the network provides DNS64 (so hosts can use DNS64-based prefix discovery, <xref target="RFC7050"/>).
This is required as hosts or individual applications might have custom DNS configuration (or even run a local DNS server) and ignore DNS64 information provided by the network, so they can not use <xref target="RFC7050"/> method to detect PREF64.
In the absense of PREF64 information in Router Advertisements such systems would not be able to run clat, which would cause connectivity issues for all IPv4-only applications running on the affected device. 
As such device wouldn't be able to use the network-provided DNS64, access to IPv4-only destination would be impacted as well.
At the time of writing all major OSes supporting DHCPv4 option 108 and enabling clat automatically also support <xref target="RFC8781"/>.
Therefore providing PREF64 information in RAs can reliably mitigate the impact of custom DNS configuration on those systems.
</t>
<t>
Receiving PREF64 information in RAs also speeds up the clat start up time, so an IPv4 address and default route become available for applications much faster.
</t>

</section>

<section anchor="dns64">
<name>DNS vs DNS64</name>
<t>
</t>

</section>

</section>

</section>

<section anchor="benefits">
<name>Solution Benefits</name>

<section anchor="vsds">
<name>Benefits Compared to Dual-Stack</name>
<t>
[note from furry@]: IPv4 saving, operation simplicity.
</t>
</section>


<section anchor="vsv6only">
<name>Benefits Compared to a Dedicated IPv6-Only Network</name>
<t>
[note from furry@]: scalability, easy for users, incrememntal migration
</t>
</section>


</section>

<section anchor="rollout">
<name>Incremental Rollout Considerations</name>
<t>

[note from furry@]:
- no safety net of HE, so many issues which have been hidden will become very much visible now
- option 108 wvalue (300 and thenincreas)

</t>

<section anchor="optin">
<name>Opt-In and Opt-Out Approach</name>
<t>
</t>
</section>

</section>

<section anchor="ops">
<name>Operational Considerations</name>

<section anchor="slaac">
<name>Address Assignment Policy</name>
<t>
[note from furry@] explian why SLAAC is mandatory currently
</t>
</section>

<section anchor="eh">
<name>Extension Headers</name>
<t>
[note from furry@] EH issue: permit at least ESP and Fragments
</t>
</section>

<section anchor="issues">
<name>Typical Issues</name>
<t>
This section discusses some typical issues which might be observed in IPv6-mostly networks.
Without safety net of IPv4 to fallback if IPv6 is broken, all potential network issues and IPv6 bugs become much more visible and impactful.
However implememtation bugs are mostly out of scope of this document, as such bugs would vary from network to network, depending on equipment and software used.
Instead this section focuses on issues caused by configuration, topology or design choices.
It should be noted that most of those issues usually pre-exist in dual-stack networks, but, as devices can fall back to IPv6, those problems are often remain unnoticed until IPv4 is taken away. 
The network administrators are advised to audit and monitor for the scenarios described below prior to migrate an existing network to IPv6-mostly mode.
</t>

<section anchor="nov6">
<name>Hosts with Disabled or Misfunctional IPv6</name>
<t>
</t>

</section>

<section anchor="ext">
<name>Network Extension</name>
<t>
</t>
</section>

<section anchor="multip">
<name>Multiple Addresses per Device</name>
<t>
</t>
</section>

<section anchor="gulla">
<name>Host Mobility and Renumbering</name>
<t>
If devices can move between network segments (VLANs) (e.g. if 802.1x with RADIUS-based VLAN assignment is used), it is recommended to reduce min and max Router Advertisement intervals to ensure that unsolicited RAs are sent as often as possible.
It is also recommended to decrease PIO lifetimes
</t>
</section>

<section anchor="frag">
<name>Fragmentation</name>
<t>
</t>
</section>

<section anchor="traceroute">
<name>Representing IPv6 Addresses by CLAT</name>
<t>
</t>
</section>

<section>
<name>Custom DNS Configuration on Endpoints</name>
</section>


</section>
</section>

    <section anchor="Security">
      <!-- All drafts are required to have a security considerations section. See RFC 3552 for a guide. -->
      <name>Security Considerations</name>
<t>
</t>
</section>

    <section anchor="privacy">
      <name>Privacy Considerations</name>
      <t>
This document does not introduce any privacy considerations.
      </t>
    </section>
    
    <section anchor="IANA">
    <!-- All drafts are required to have an IANA considerations section. See RFC 8126 for a guide.-->
      <name>IANA Considerations</name>
      <t>This memo does not introduce any requests to IANA.</t>
    </section>
    
    <!-- NOTE: The Acknowledgements and Contributors sections are at the end of this template -->
  </middle>

  <back>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.2119.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.6146.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.6333.xml"/>
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.6877.xml"/>
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.7050.xml"/>
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.7335.xml"/>
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.8174.xml"/>
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.8781.xml"/>
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.8585.xml"/>
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.8925.xml"/>
        <!-- The recommended and simplest way to include a well known reference -->
        
      </references>
 
      <references>
	      <name>Informative References</name>
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.1918.xml"/>
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.4861.xml"/>
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.4862.xml"/>
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.6052.xml"/>
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.6145.xml"/>
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.7225.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-v6ops-dhcp-pd-per-device.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.link-v6ops-claton.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.link-v6ops-gulla.xml"/>

      </references>
    </references>
    
    <section anchor="Acknowledgements" numbered="false">
      <name>Acknowledgements</name>
<t>
Thanks to  for the discussions, the input and all contribution.
</t>
    </section>
    
 </back>
</rfc>
